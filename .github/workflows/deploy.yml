name: Deploy Frontend VM

on:
  workflow_dispatch:
  repository_dispatch:
    types: [deploy-from-front]

permissions:
  contents: read
  packages: write

jobs:
  destroy-before-deploy:
    name: Destroy Existing Infra
    runs-on: ubuntu-latest
    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Create SSH private key file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Terraform Init (Destroy)
        working-directory: terraform
        run: terraform init

      - name: Terraform Destroy
        working-directory: terraform
        run: |
          terraform destroy -auto-approve \
            -var="api_token=${{ secrets.API_TOKEN }}" \
            -var="ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="username=${{ secrets.ANSIBLE_USER }}" \
            -var="registry_username=${{ github.repository_owner }}" \
            -var="registry_token=${{ secrets.REGISTRY_TOKEN }}" \
            -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}" \
            -var="front_image_tag=ghcr.io/${{ github.repository_owner }}/breizhsport_front:infra" || true

  deploy:
    name: Deploy Frontend Infra
    needs: destroy-before-deploy
    runs-on: ubuntu-latest
    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Create SSH private key file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Terraform Init (Apply)
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: |
          terraform apply -auto-approve \
            -var="api_token=${{ secrets.API_TOKEN }}" \
            -var="ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="username=${{ secrets.ANSIBLE_USER }}" \
            -var="registry_username=${{ github.repository_owner }}" \
            -var="registry_token=${{ secrets.REGISTRY_TOKEN }}" \
            -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}" \
            -var="front_image_tag=ghcr.io/${{ github.repository_owner }}/breizhsport_front:infra"

      - name: Cleanup
        run: rm -f ~/.ssh/id_rsa terraform/id_rsa