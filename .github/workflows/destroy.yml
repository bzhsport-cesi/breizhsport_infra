name: Destroy Frontend VM

on:
  workflow_call:       # Permet l'appel depuis deploy.yml
  workflow_dispatch:   # Permet de lancer manuellement via GitHub UI

permissions:
  contents: read

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Destroy
        working-directory: terraform
        run: |
          echo "Destruction des ressources"
          terraform destroy -auto-approve \
            -var="api_token=${{ secrets.API_TOKEN }}" \
            -var="ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="username=${{ secrets.ANSIBLE_USER }}" \
            -var="registry_username=${{ github.repository_owner }}" \
            -var="registry_token=${{ secrets.REGISTRY_TOKEN }}" \
            -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}" \
            -var="front_image_tag=ghcr.io/${{ github.repository_owner }}/breizhsport_front:infra"

      - name: Vérification post-destruction
        working-directory: terraform
        run: |
          echo "Vérification que les ressources ont bien été supprimées"

          VM_COUNT=$(terraform state list | grep warren_virtual_machine || true | wc -l)
          DNS_COUNT=$(terraform state list | grep cloudflare_record || true | wc -l)

          if [ "$VM_COUNT" -eq 0 ] && [ "$DNS_COUNT" -eq 0 ]; then
            echo "Toutes les ressources ont bien été supprimées."
          else
            echo "Certaines ressources semblent encore présentes dans l'état Terraform :"
            terraform state list
            exit 1
          fi